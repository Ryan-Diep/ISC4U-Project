/*package com.beebook.backend;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/user") // This means URL's start with /user (after Application path)
public class mainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private userRepository userRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String USER_NAME
      , @RequestParam String FIRST_NAME
      , @RequestParam String LAST_NAME
      , @RequestParam String EMAIL_ADDRESS
      , @RequestParam String PASSWORD) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    users n = new users();
    n.setUserName(USER_NAME);
    n.setFirstName(FIRST_NAME);
    n.setLastName(LAST_NAME);
    n.setEmail(EMAIL_ADDRESS);
    n.setPassword(PASSWORD);
    userRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<users> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }
}
*/
